{"name":"2014-12-solo","tagline":"The Time Complexity Viewer","body":"# The Time Complexity Viewer\r\n\r\n## Forge stronger developers\r\n\r\nThis revolutionary product illustrates the computation time of a function, as its input grows. The user is given a visual graph for the effectiveness of their algorithm.\r\n\r\n### Problem ###\r\nTime complexity is fundamental to effective software engineering. But it can be a difficult concept for new developers to learn, and even harder to internalize how any particular function is affected. \r\n\r\nMastering it often involves learning Big O notation, learning new vocabulary to classify algorithms (\"constant time\", \"linearithmic time\", \"double exponential time\"), and learning how to translate lines of code into time complexity. Too many developers neglect investing in these vital skills.\r\n\r\n### Solution ###\r\n**The Time Complexity Viewer** allows a user to paste in a JavaScript function, which is then run with various input sizes. Each result is profiled to display back to the user as a graph, so that the user can *see* just how effective their algorithm really is.\r\n\r\n\"Mastering time complexity separates the script kiddies from the software engineers.\" -- *Gaia, Mother of All Things*\r\n\r\n### How to Get Started ###\r\nAll you have to do is load up **The Time Complexity Viewer** in your favorite web browser & paste in a JavaScript function. Then hold onto your seat!\r\n\r\n\r\n\"I used to be a mediocre developer. Now I have a job at Google. And it's all thanks to The Time Complexity Viewer!\" -- *Larry Page*\r\n\r\n\r\n#### Become a better developer, try out **The Time Complexity Viewer** today: http://mvp.dsernst.com/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}